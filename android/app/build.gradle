// Apply necessary plugins at the top
plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.gms.google-services'  // Apply Google Services Plugin
}

// Load the local properties file to fetch Flutter SDK path
def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode') ?: "1"
def flutterVersionName = localProperties.getProperty('flutter.versionName') ?: "1.0.0"

// Apply Flutter plugin after the android plugin and Google services
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 34  // Use the latest compile SDK version

    defaultConfig {
        applicationId "com.bittudev.bittuservices"  // Your unique app identifier
        minSdkVersion 23  // Minimum SDK version supported by your app
        targetSdkVersion 34  // Target SDK version for the app
        versionCode flutterVersionCode.toInteger()  // Use the flutterVersionCode from local.properties
        versionName flutterVersionName  // Use the flutterVersionName from local.properties
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug  // Use your own signing configuration for release
        }
    }

    buildFeatures {
        buildConfig true  // Enable BuildConfig if you're using custom fields
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"  // Kotlin standard library
    implementation platform('com.google.firebase:firebase-bom:33.6.0')  // Firebase BOM
    implementation 'com.google.firebase:firebase-analytics'  // Firebase Analytics
}
